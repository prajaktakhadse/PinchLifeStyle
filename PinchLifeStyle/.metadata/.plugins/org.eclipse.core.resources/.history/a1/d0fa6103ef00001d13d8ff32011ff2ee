package com.bank.service;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Optional;
import java.util.TreeSet;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bank.DTO.BankUserDTO;
import com.bank.globalExceptionHandler.AccountNotFound;
import com.bank.model.Bank;
import com.bank.model.Transaction;
import com.bank.model.User;
import com.bank.repository.BankRepo;
import com.bank.repository.TransactionRepo;
import com.bank.repository.UserRepo;


@Service
public class BankUserServiceImp implements BankUserService {

	@Autowired
	private BankRepo br;
	
	@Autowired
	private TransactionRepo tr;
	
	@Autowired
	private UserRepo ur;
	@Override
	public Bank saveBankUser(Bank d1) {

		Bank b0=br.save(d1);
		
		return b0;
	}
	

	@Override
	public Transaction creditAmount(String accNum, int amount) {
		 //TODO Auto-generated method stub
		Optional<Bank> b1=br.findById(accNo);
		if(b1.isEmpty())
			throw new AccountNotFound("No account available");
		Bank bUser=b1.get();
		bUser.setBalance(bUser.getBalance()+money);
		bDao.save(bUser);
		Transaction t1=new Transaction("Credit", money, bUser);
		return tDao.save(t1);
		
		
	}

	@Override
	public Transaction debitAmount(String accNum, int amount) {
		// TODO Auto-generated method stub
		Optional<Bank> b1=bDao.findById(accNo);
		if(b1.isEmpty())
			throw new AccountNotFound("No account available");
		Bank bUser=b1.get();
		if(bUser.getBalance()<money)
			throw new AccountNotFound("Not inuf ammount in your account");
		bUser.setBalance(bUser.getBalance()-money);
		bDao.save(bUser);
		Transaction t1=new Transaction("debit", money, bUser);
		return tDao.save(t1);
	}

}
